// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftgraphsensitivityLabel
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphsensitivityLabel
        /// class.
        /// </summary>
        public MicrosoftgraphsensitivityLabel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphsensitivityLabel
        /// class.
        /// </summary>
        /// <param name="applicationMode">Possible values include: 'manual',
        /// 'automatic', 'recommended'</param>
        public MicrosoftgraphsensitivityLabel(string id = default(string), string name = default(string), string displayName = default(string), string description = default(string), string toolTip = default(string), bool? isEndpointProtectionEnabled = default(bool?), bool? isDefault = default(bool?), string applicationMode = default(string), IList<MicrosoftgraphlabelActionBase> labelActions = default(IList<MicrosoftgraphlabelActionBase>), IList<MicrosoftgraphlabelPolicy> assignedPolicies = default(IList<MicrosoftgraphlabelPolicy>), int? priority = default(int?), IList<MicrosoftgraphsensitivityLabel> sublabels = default(IList<MicrosoftgraphsensitivityLabel>))
        {
            Id = id;
            Name = name;
            DisplayName = displayName;
            Description = description;
            ToolTip = toolTip;
            IsEndpointProtectionEnabled = isEndpointProtectionEnabled;
            IsDefault = isDefault;
            ApplicationMode = applicationMode;
            LabelActions = labelActions;
            AssignedPolicies = assignedPolicies;
            Priority = priority;
            Sublabels = sublabels;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "toolTip")]
        public string ToolTip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isEndpointProtectionEnabled")]
        public bool? IsEndpointProtectionEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isDefault")]
        public bool? IsDefault { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'manual', 'automatic',
        /// 'recommended'
        /// </summary>
        [JsonProperty(PropertyName = "applicationMode")]
        public string ApplicationMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "labelActions")]
        public IList<MicrosoftgraphlabelActionBase> LabelActions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assignedPolicies")]
        public IList<MicrosoftgraphlabelPolicy> AssignedPolicies { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sublabels")]
        public IList<MicrosoftgraphsensitivityLabel> Sublabels { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Priority > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "Priority", 2147483647);
            }
            if (Priority < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Priority", -2147483648);
            }
            if (Sublabels != null)
            {
                foreach (var element in Sublabels)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
