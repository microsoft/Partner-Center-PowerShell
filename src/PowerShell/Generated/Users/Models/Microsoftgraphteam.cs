// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Microsoftgraphteam
    {
        /// <summary>
        /// Initializes a new instance of the Microsoftgraphteam class.
        /// </summary>
        public Microsoftgraphteam()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Microsoftgraphteam class.
        /// </summary>
        /// <param name="specialization">Possible values include: 'none',
        /// 'educationStandard', 'educationClass',
        /// 'educationProfessionalLearningCommunity', 'educationStaff',
        /// 'healthcareStandard', 'healthcareCareCoordination',
        /// 'unknownFutureValue'</param>
        /// <param name="visibility">Possible values include: 'private',
        /// 'public', 'hiddenMembership', 'unknownFutureValue'</param>
        public Microsoftgraphteam(string id = default(string), string displayName = default(string), string description = default(string), string internalId = default(string), string classification = default(string), string specialization = default(string), string visibility = default(string), string webUrl = default(string), MicrosoftgraphteamMemberSettings memberSettings = default(MicrosoftgraphteamMemberSettings), MicrosoftgraphteamGuestSettings guestSettings = default(MicrosoftgraphteamGuestSettings), MicrosoftgraphteamMessagingSettings messagingSettings = default(MicrosoftgraphteamMessagingSettings), MicrosoftgraphteamFunSettings funSettings = default(MicrosoftgraphteamFunSettings), MicrosoftgraphteamDiscoverySettings discoverySettings = default(MicrosoftgraphteamDiscoverySettings), bool? isArchived = default(bool?), Microsoftgraphschedule schedule = default(Microsoftgraphschedule), MicrosoftgraphprofilePhoto photo = default(MicrosoftgraphprofilePhoto), MicrosoftgraphteamsTemplate template = default(MicrosoftgraphteamsTemplate), IList<Microsoftgraphchannel> channels = default(IList<Microsoftgraphchannel>), IList<MicrosoftgraphteamsCatalogApp> apps = default(IList<MicrosoftgraphteamsCatalogApp>), IList<MicrosoftgraphteamsAppInstallation> installedApps = default(IList<MicrosoftgraphteamsAppInstallation>), IList<MicrosoftgraphteamsAsyncOperation> operations = default(IList<MicrosoftgraphteamsAsyncOperation>), IList<Microsoftgraphuser> owners = default(IList<Microsoftgraphuser>), Microsoftgraphchannel primaryChannel = default(Microsoftgraphchannel), Microsoftgraphgroup group = default(Microsoftgraphgroup))
        {
            Id = id;
            DisplayName = displayName;
            Description = description;
            InternalId = internalId;
            Classification = classification;
            Specialization = specialization;
            Visibility = visibility;
            WebUrl = webUrl;
            MemberSettings = memberSettings;
            GuestSettings = guestSettings;
            MessagingSettings = messagingSettings;
            FunSettings = funSettings;
            DiscoverySettings = discoverySettings;
            IsArchived = isArchived;
            Schedule = schedule;
            Photo = photo;
            Template = template;
            Channels = channels;
            Apps = apps;
            InstalledApps = installedApps;
            Operations = operations;
            Owners = owners;
            PrimaryChannel = primaryChannel;
            Group = group;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "internalId")]
        public string InternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "classification")]
        public string Classification { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'none', 'educationStandard',
        /// 'educationClass', 'educationProfessionalLearningCommunity',
        /// 'educationStaff', 'healthcareStandard',
        /// 'healthcareCareCoordination', 'unknownFutureValue'
        /// </summary>
        [JsonProperty(PropertyName = "specialization")]
        public string Specialization { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'private', 'public',
        /// 'hiddenMembership', 'unknownFutureValue'
        /// </summary>
        [JsonProperty(PropertyName = "visibility")]
        public string Visibility { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "webUrl")]
        public string WebUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "memberSettings")]
        public MicrosoftgraphteamMemberSettings MemberSettings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "guestSettings")]
        public MicrosoftgraphteamGuestSettings GuestSettings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "messagingSettings")]
        public MicrosoftgraphteamMessagingSettings MessagingSettings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "funSettings")]
        public MicrosoftgraphteamFunSettings FunSettings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discoverySettings")]
        public MicrosoftgraphteamDiscoverySettings DiscoverySettings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isArchived")]
        public bool? IsArchived { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schedule")]
        public Microsoftgraphschedule Schedule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "photo")]
        public MicrosoftgraphprofilePhoto Photo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "template")]
        public MicrosoftgraphteamsTemplate Template { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channels")]
        public IList<Microsoftgraphchannel> Channels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apps")]
        public IList<MicrosoftgraphteamsCatalogApp> Apps { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "installedApps")]
        public IList<MicrosoftgraphteamsAppInstallation> InstalledApps { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "operations")]
        public IList<MicrosoftgraphteamsAsyncOperation> Operations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owners")]
        public IList<Microsoftgraphuser> Owners { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "primaryChannel")]
        public Microsoftgraphchannel PrimaryChannel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "group")]
        public Microsoftgraphgroup Group { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Photo != null)
            {
                Photo.Validate();
            }
            if (Channels != null)
            {
                foreach (var element in Channels)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Operations != null)
            {
                foreach (var element1 in Operations)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (Owners != null)
            {
                foreach (var element2 in Owners)
                {
                    if (element2 != null)
                    {
                        element2.Validate();
                    }
                }
            }
            if (PrimaryChannel != null)
            {
                PrimaryChannel.Validate();
            }
            if (Group != null)
            {
                Group.Validate();
            }
        }
    }
}
