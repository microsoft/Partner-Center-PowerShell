// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// workbookChart
    /// </summary>
    public partial class ComponentsschemasmicrosoftGraphWorkbookchartallof1
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphWorkbookchartallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphWorkbookchartallof1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphWorkbookchartallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphWorkbookchartallof1(double? height = default(double?), double? left = default(double?), string name = default(string), double? top = default(double?), double? width = default(double?), MicrosoftgraphworkbookChartAxes axes = default(MicrosoftgraphworkbookChartAxes), MicrosoftgraphworkbookChartDataLabels dataLabels = default(MicrosoftgraphworkbookChartDataLabels), MicrosoftgraphworkbookChartAreaFormat format = default(MicrosoftgraphworkbookChartAreaFormat), MicrosoftgraphworkbookChartLegend legend = default(MicrosoftgraphworkbookChartLegend), IList<MicrosoftgraphworkbookChartSeries> series = default(IList<MicrosoftgraphworkbookChartSeries>), MicrosoftgraphworkbookChartTitle title = default(MicrosoftgraphworkbookChartTitle), MicrosoftgraphworkbookWorksheet worksheet = default(MicrosoftgraphworkbookWorksheet))
        {
            Height = height;
            Left = left;
            Name = name;
            Top = top;
            Width = width;
            Axes = axes;
            DataLabels = dataLabels;
            Format = format;
            Legend = legend;
            Series = series;
            Title = title;
            Worksheet = worksheet;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "height")]
        public double? Height { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "left")]
        public double? Left { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "top")]
        public double? Top { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "width")]
        public double? Width { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "axes")]
        public MicrosoftgraphworkbookChartAxes Axes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataLabels")]
        public MicrosoftgraphworkbookChartDataLabels DataLabels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "format")]
        public MicrosoftgraphworkbookChartAreaFormat Format { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "legend")]
        public MicrosoftgraphworkbookChartLegend Legend { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "series")]
        public IList<MicrosoftgraphworkbookChartSeries> Series { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public MicrosoftgraphworkbookChartTitle Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "worksheet")]
        public MicrosoftgraphworkbookWorksheet Worksheet { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Worksheet != null)
            {
                Worksheet.Validate();
            }
        }
    }
}
