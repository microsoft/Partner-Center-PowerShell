// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// workbookFilterCriteria
    /// </summary>
    public partial class MicrosoftgraphworkbookFilterCriteria
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphworkbookFilterCriteria class.
        /// </summary>
        public MicrosoftgraphworkbookFilterCriteria()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphworkbookFilterCriteria class.
        /// </summary>
        public MicrosoftgraphworkbookFilterCriteria(string color = default(string), string criterion1 = default(string), string criterion2 = default(string), string dynamicCriteria = default(string), string filterOn = default(string), MicrosoftgraphworkbookIcon icon = default(MicrosoftgraphworkbookIcon), string operatorProperty = default(string), object values = default(object))
        {
            Color = color;
            Criterion1 = criterion1;
            Criterion2 = criterion2;
            DynamicCriteria = dynamicCriteria;
            FilterOn = filterOn;
            Icon = icon;
            OperatorProperty = operatorProperty;
            Values = values;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "color")]
        public string Color { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "criterion1")]
        public string Criterion1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "criterion2")]
        public string Criterion2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dynamicCriteria")]
        public string DynamicCriteria { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "filterOn")]
        public string FilterOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "icon")]
        public MicrosoftgraphworkbookIcon Icon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "operator")]
        public string OperatorProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "values")]
        public object Values { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Icon != null)
            {
                Icon.Validate();
            }
        }
    }
}
