// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftgraphworkbookTable
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphworkbookTable
        /// class.
        /// </summary>
        public MicrosoftgraphworkbookTable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphworkbookTable
        /// class.
        /// </summary>
        public MicrosoftgraphworkbookTable(string id = default(string), bool? highlightFirstColumn = default(bool?), bool? highlightLastColumn = default(bool?), string legacyId = default(string), string name = default(string), bool? showBandedColumns = default(bool?), bool? showBandedRows = default(bool?), bool? showFilterButton = default(bool?), bool? showHeaders = default(bool?), bool? showTotals = default(bool?), string style = default(string), IList<MicrosoftgraphworkbookTableColumn> columns = default(IList<MicrosoftgraphworkbookTableColumn>), IList<MicrosoftgraphworkbookTableRow> rows = default(IList<MicrosoftgraphworkbookTableRow>), MicrosoftgraphworkbookTableSort sort = default(MicrosoftgraphworkbookTableSort), MicrosoftgraphworkbookWorksheet worksheet = default(MicrosoftgraphworkbookWorksheet))
        {
            Id = id;
            HighlightFirstColumn = highlightFirstColumn;
            HighlightLastColumn = highlightLastColumn;
            LegacyId = legacyId;
            Name = name;
            ShowBandedColumns = showBandedColumns;
            ShowBandedRows = showBandedRows;
            ShowFilterButton = showFilterButton;
            ShowHeaders = showHeaders;
            ShowTotals = showTotals;
            Style = style;
            Columns = columns;
            Rows = rows;
            Sort = sort;
            Worksheet = worksheet;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "highlightFirstColumn")]
        public bool? HighlightFirstColumn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "highlightLastColumn")]
        public bool? HighlightLastColumn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "legacyId")]
        public string LegacyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "showBandedColumns")]
        public bool? ShowBandedColumns { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "showBandedRows")]
        public bool? ShowBandedRows { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "showFilterButton")]
        public bool? ShowFilterButton { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "showHeaders")]
        public bool? ShowHeaders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "showTotals")]
        public bool? ShowTotals { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "style")]
        public string Style { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IList<MicrosoftgraphworkbookTableColumn> Columns { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rows")]
        public IList<MicrosoftgraphworkbookTableRow> Rows { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sort")]
        public MicrosoftgraphworkbookTableSort Sort { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "worksheet")]
        public MicrosoftgraphworkbookWorksheet Worksheet { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Columns != null)
            {
                foreach (var element in Columns)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Rows != null)
            {
                foreach (var element1 in Rows)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (Worksheet != null)
            {
                Worksheet.Validate();
            }
        }
    }
}
