// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// mobileAppIntentAndStateDetail
    /// </summary>
    public partial class MicrosoftgraphmobileAppIntentAndStateDetail
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphmobileAppIntentAndStateDetail class.
        /// </summary>
        public MicrosoftgraphmobileAppIntentAndStateDetail()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphmobileAppIntentAndStateDetail class.
        /// </summary>
        /// <param name="applicationId">MobieApp identifier.</param>
        /// <param name="displayName">The admin provided or imported title of
        /// the app.</param>
        /// <param name="mobileAppIntent">Possible values include: 'available',
        /// 'notAvailable', 'requiredInstall', 'requiredUninstall',
        /// 'requiredAndAvailableInstall', 'availableInstallWithoutEnrollment',
        /// 'exclude'</param>
        /// <param name="displayVersion">Human readable version of the
        /// application</param>
        /// <param name="installState">Possible values include: 'installed',
        /// 'failed', 'notInstalled', 'uninstallFailed', 'pendingInstall',
        /// 'unknown', 'notApplicable'</param>
        /// <param name="supportedDeviceTypes">The supported platforms for the
        /// app.</param>
        public MicrosoftgraphmobileAppIntentAndStateDetail(string applicationId = default(string), string displayName = default(string), string mobileAppIntent = default(string), string displayVersion = default(string), string installState = default(string), IList<MicrosoftgraphmobileAppSupportedDeviceType> supportedDeviceTypes = default(IList<MicrosoftgraphmobileAppSupportedDeviceType>))
        {
            ApplicationId = applicationId;
            DisplayName = displayName;
            MobileAppIntent = mobileAppIntent;
            DisplayVersion = displayVersion;
            InstallState = installState;
            SupportedDeviceTypes = supportedDeviceTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets mobieApp identifier.
        /// </summary>
        [JsonProperty(PropertyName = "applicationId")]
        public string ApplicationId { get; set; }

        /// <summary>
        /// Gets or sets the admin provided or imported title of the app.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'available', 'notAvailable',
        /// 'requiredInstall', 'requiredUninstall',
        /// 'requiredAndAvailableInstall', 'availableInstallWithoutEnrollment',
        /// 'exclude'
        /// </summary>
        [JsonProperty(PropertyName = "mobileAppIntent")]
        public string MobileAppIntent { get; set; }

        /// <summary>
        /// Gets or sets human readable version of the application
        /// </summary>
        [JsonProperty(PropertyName = "displayVersion")]
        public string DisplayVersion { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'installed', 'failed',
        /// 'notInstalled', 'uninstallFailed', 'pendingInstall', 'unknown',
        /// 'notApplicable'
        /// </summary>
        [JsonProperty(PropertyName = "installState")]
        public string InstallState { get; set; }

        /// <summary>
        /// Gets or sets the supported platforms for the app.
        /// </summary>
        [JsonProperty(PropertyName = "supportedDeviceTypes")]
        public IList<MicrosoftgraphmobileAppSupportedDeviceType> SupportedDeviceTypes { get; set; }

    }
}
