// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// attachment
    /// </summary>
    public partial class ComponentsschemasmicrosoftGraphAttachmentallof1
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphAttachmentallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphAttachmentallof1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphAttachmentallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphAttachmentallof1(System.DateTime? lastModifiedDateTime = default(System.DateTime?), string name = default(string), string contentType = default(string), int? size = default(int?), bool? isInline = default(bool?))
        {
            LastModifiedDateTime = lastModifiedDateTime;
            Name = name;
            ContentType = contentType;
            Size = size;
            IsInline = isInline;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public System.DateTime? LastModifiedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contentType")]
        public string ContentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public int? Size { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isInline")]
        public bool? IsInline { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Size > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "Size", 2147483647);
            }
            if (Size < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Size", -2147483648);
            }
        }
    }
}
