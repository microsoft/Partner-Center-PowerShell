// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// device
    /// </summary>
    /// <remarks>
    /// Represents an Azure Active Directory object. The directoryObject type
    /// is the base type for many other directory entity types.
    /// </remarks>
    public partial class ComponentsschemasmicrosoftGraphDeviceallof1
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphDeviceallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphDeviceallof1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphDeviceallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphDeviceallof1(bool? accountEnabled = default(bool?), IList<MicrosoftgraphalternativeSecurityId> alternativeSecurityIds = default(IList<MicrosoftgraphalternativeSecurityId>), System.DateTime? approximateLastSignInDateTime = default(System.DateTime?), System.DateTime? complianceExpirationDateTime = default(System.DateTime?), string deviceId = default(string), string deviceMetadata = default(string), int? deviceVersion = default(int?), string displayName = default(string), bool? isCompliant = default(bool?), bool? isManaged = default(bool?), System.DateTime? onPremisesLastSyncDateTime = default(System.DateTime?), bool? onPremisesSyncEnabled = default(bool?), string operatingSystem = default(string), string operatingSystemVersion = default(string), IList<string> physicalIds = default(IList<string>), string profileType = default(string), IList<string> systemLabels = default(IList<string>), string trustType = default(string), string name = default(string), string manufacturer = default(string), string model = default(string), string kind = default(string), string status = default(string), string platform = default(string), IList<MicrosoftgraphdirectoryObject> memberOf = default(IList<MicrosoftgraphdirectoryObject>), IList<MicrosoftgraphdirectoryObject> registeredOwners = default(IList<MicrosoftgraphdirectoryObject>), IList<MicrosoftgraphdirectoryObject> registeredUsers = default(IList<MicrosoftgraphdirectoryObject>), IList<MicrosoftgraphdirectoryObject> transitiveMemberOf = default(IList<MicrosoftgraphdirectoryObject>), IList<Microsoftgraphextension> extensions = default(IList<Microsoftgraphextension>), IList<Microsoftgraphcommand> commands = default(IList<Microsoftgraphcommand>))
        {
            AccountEnabled = accountEnabled;
            AlternativeSecurityIds = alternativeSecurityIds;
            ApproximateLastSignInDateTime = approximateLastSignInDateTime;
            ComplianceExpirationDateTime = complianceExpirationDateTime;
            DeviceId = deviceId;
            DeviceMetadata = deviceMetadata;
            DeviceVersion = deviceVersion;
            DisplayName = displayName;
            IsCompliant = isCompliant;
            IsManaged = isManaged;
            OnPremisesLastSyncDateTime = onPremisesLastSyncDateTime;
            OnPremisesSyncEnabled = onPremisesSyncEnabled;
            OperatingSystem = operatingSystem;
            OperatingSystemVersion = operatingSystemVersion;
            PhysicalIds = physicalIds;
            ProfileType = profileType;
            SystemLabels = systemLabels;
            TrustType = trustType;
            Name = name;
            Manufacturer = manufacturer;
            Model = model;
            Kind = kind;
            Status = status;
            Platform = platform;
            MemberOf = memberOf;
            RegisteredOwners = registeredOwners;
            RegisteredUsers = registeredUsers;
            TransitiveMemberOf = transitiveMemberOf;
            Extensions = extensions;
            Commands = commands;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountEnabled")]
        public bool? AccountEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alternativeSecurityIds")]
        public IList<MicrosoftgraphalternativeSecurityId> AlternativeSecurityIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "approximateLastSignInDateTime")]
        public System.DateTime? ApproximateLastSignInDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "complianceExpirationDateTime")]
        public System.DateTime? ComplianceExpirationDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deviceId")]
        public string DeviceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deviceMetadata")]
        public string DeviceMetadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deviceVersion")]
        public int? DeviceVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isCompliant")]
        public bool? IsCompliant { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isManaged")]
        public bool? IsManaged { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onPremisesLastSyncDateTime")]
        public System.DateTime? OnPremisesLastSyncDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onPremisesSyncEnabled")]
        public bool? OnPremisesSyncEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "operatingSystem")]
        public string OperatingSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "operatingSystemVersion")]
        public string OperatingSystemVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "physicalIds")]
        public IList<string> PhysicalIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "profileType")]
        public string ProfileType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "systemLabels")]
        public IList<string> SystemLabels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "trustType")]
        public string TrustType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Manufacturer")]
        public string Manufacturer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Model")]
        public string Model { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Kind")]
        public string Kind { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Platform")]
        public string Platform { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "memberOf")]
        public IList<MicrosoftgraphdirectoryObject> MemberOf { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "registeredOwners")]
        public IList<MicrosoftgraphdirectoryObject> RegisteredOwners { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "registeredUsers")]
        public IList<MicrosoftgraphdirectoryObject> RegisteredUsers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transitiveMemberOf")]
        public IList<MicrosoftgraphdirectoryObject> TransitiveMemberOf { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extensions")]
        public IList<Microsoftgraphextension> Extensions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "commands")]
        public IList<Microsoftgraphcommand> Commands { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AlternativeSecurityIds != null)
            {
                foreach (var element in AlternativeSecurityIds)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (DeviceVersion > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "DeviceVersion", 2147483647);
            }
            if (DeviceVersion < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "DeviceVersion", -2147483648);
            }
        }
    }
}
