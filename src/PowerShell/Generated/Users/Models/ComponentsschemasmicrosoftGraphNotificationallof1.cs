// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// notification
    /// </summary>
    public partial class ComponentsschemasmicrosoftGraphNotificationallof1
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphNotificationallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphNotificationallof1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphNotificationallof1 class.
        /// </summary>
        /// <param name="priority">Possible values include: 'None', 'High',
        /// 'Low'</param>
        public ComponentsschemasmicrosoftGraphNotificationallof1(string targetHostName = default(string), System.DateTime? expirationDateTime = default(System.DateTime?), MicrosoftgraphpayloadTypes payload = default(MicrosoftgraphpayloadTypes), int? displayTimeToLive = default(int?), string priority = default(string), string groupName = default(string), MicrosoftgraphtargetPolicyEndpoints targetPolicy = default(MicrosoftgraphtargetPolicyEndpoints))
        {
            TargetHostName = targetHostName;
            ExpirationDateTime = expirationDateTime;
            Payload = payload;
            DisplayTimeToLive = displayTimeToLive;
            Priority = priority;
            GroupName = groupName;
            TargetPolicy = targetPolicy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetHostName")]
        public string TargetHostName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expirationDateTime")]
        public System.DateTime? ExpirationDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "payload")]
        public MicrosoftgraphpayloadTypes Payload { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayTimeToLive")]
        public int? DisplayTimeToLive { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'High', 'Low'
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        public string Priority { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "groupName")]
        public string GroupName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetPolicy")]
        public MicrosoftgraphtargetPolicyEndpoints TargetPolicy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayTimeToLive > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "DisplayTimeToLive", 2147483647);
            }
            if (DisplayTimeToLive < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "DisplayTimeToLive", -2147483648);
            }
        }
    }
}
