// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MicrosoftgraphinformationProtectionLabel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphinformationProtectionLabel class.
        /// </summary>
        public MicrosoftgraphinformationProtectionLabel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphinformationProtectionLabel class.
        /// </summary>
        public MicrosoftgraphinformationProtectionLabel(string id = default(string), string name = default(string), string description = default(string), string color = default(string), int? sensitivity = default(int?), string tooltip = default(string), bool? isActive = default(bool?))
        {
            Id = id;
            Name = name;
            Description = description;
            Color = color;
            Sensitivity = sensitivity;
            Tooltip = tooltip;
            IsActive = isActive;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "color")]
        public string Color { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sensitivity")]
        public int? Sensitivity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tooltip")]
        public string Tooltip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isActive")]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sensitivity > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "Sensitivity", 2147483647);
            }
            if (Sensitivity < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Sensitivity", -2147483648);
            }
        }
    }
}
