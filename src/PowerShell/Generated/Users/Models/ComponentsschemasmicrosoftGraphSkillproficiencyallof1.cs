// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// skillProficiency
    /// </summary>
    public partial class ComponentsschemasmicrosoftGraphSkillproficiencyallof1
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphSkillproficiencyallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphSkillproficiencyallof1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphSkillproficiencyallof1 class.
        /// </summary>
        /// <param name="proficiency">Possible values include: 'elementary',
        /// 'limitedWorking', 'generalProfessional', 'advancedProfessional',
        /// 'expert', 'unknownFutureValue'</param>
        public ComponentsschemasmicrosoftGraphSkillproficiencyallof1(IList<string> categories = default(IList<string>), string displayName = default(string), string proficiency = default(string), string webUrl = default(string))
        {
            Categories = categories;
            DisplayName = displayName;
            Proficiency = proficiency;
            WebUrl = webUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "categories")]
        public IList<string> Categories { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'elementary',
        /// 'limitedWorking', 'generalProfessional', 'advancedProfessional',
        /// 'expert', 'unknownFutureValue'
        /// </summary>
        [JsonProperty(PropertyName = "proficiency")]
        public string Proficiency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "webUrl")]
        public string WebUrl { get; set; }

    }
}
