// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// deviceConfigurationSettingState
    /// </summary>
    public partial class MicrosoftgraphdeviceConfigurationSettingState
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphdeviceConfigurationSettingState class.
        /// </summary>
        public MicrosoftgraphdeviceConfigurationSettingState()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphdeviceConfigurationSettingState class.
        /// </summary>
        /// <param name="setting">The setting that is being reported</param>
        /// <param name="settingName">Localized/user friendly setting name that
        /// is being reported</param>
        /// <param name="instanceDisplayName">Name of setting instance that is
        /// being reported.</param>
        /// <param name="state">Possible values include: 'unknown',
        /// 'notApplicable', 'compliant', 'remediated', 'nonCompliant',
        /// 'error', 'conflict', 'notAssigned'</param>
        /// <param name="errorCode">Error code for the setting</param>
        /// <param name="errorDescription">Error description</param>
        /// <param name="userId">UserId</param>
        /// <param name="userName">UserName</param>
        /// <param name="userEmail">UserEmail</param>
        /// <param name="userPrincipalName">UserPrincipalName.</param>
        /// <param name="sources">Contributing policies</param>
        /// <param name="currentValue">Current value of setting on
        /// device</param>
        public MicrosoftgraphdeviceConfigurationSettingState(string setting = default(string), string settingName = default(string), string instanceDisplayName = default(string), string state = default(string), long? errorCode = default(long?), string errorDescription = default(string), string userId = default(string), string userName = default(string), string userEmail = default(string), string userPrincipalName = default(string), IList<MicrosoftgraphsettingSource> sources = default(IList<MicrosoftgraphsettingSource>), string currentValue = default(string))
        {
            Setting = setting;
            SettingName = settingName;
            InstanceDisplayName = instanceDisplayName;
            State = state;
            ErrorCode = errorCode;
            ErrorDescription = errorDescription;
            UserId = userId;
            UserName = userName;
            UserEmail = userEmail;
            UserPrincipalName = userPrincipalName;
            Sources = sources;
            CurrentValue = currentValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the setting that is being reported
        /// </summary>
        [JsonProperty(PropertyName = "setting")]
        public string Setting { get; set; }

        /// <summary>
        /// Gets or sets localized/user friendly setting name that is being
        /// reported
        /// </summary>
        [JsonProperty(PropertyName = "settingName")]
        public string SettingName { get; set; }

        /// <summary>
        /// Gets or sets name of setting instance that is being reported.
        /// </summary>
        [JsonProperty(PropertyName = "instanceDisplayName")]
        public string InstanceDisplayName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'unknown', 'notApplicable',
        /// 'compliant', 'remediated', 'nonCompliant', 'error', 'conflict',
        /// 'notAssigned'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets error code for the setting
        /// </summary>
        [JsonProperty(PropertyName = "errorCode")]
        public long? ErrorCode { get; set; }

        /// <summary>
        /// Gets or sets error description
        /// </summary>
        [JsonProperty(PropertyName = "errorDescription")]
        public string ErrorDescription { get; set; }

        /// <summary>
        /// Gets or sets userId
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }

        /// <summary>
        /// Gets or sets userName
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets userEmail
        /// </summary>
        [JsonProperty(PropertyName = "userEmail")]
        public string UserEmail { get; set; }

        /// <summary>
        /// Gets or sets userPrincipalName.
        /// </summary>
        [JsonProperty(PropertyName = "userPrincipalName")]
        public string UserPrincipalName { get; set; }

        /// <summary>
        /// Gets or sets contributing policies
        /// </summary>
        [JsonProperty(PropertyName = "sources")]
        public IList<MicrosoftgraphsettingSource> Sources { get; set; }

        /// <summary>
        /// Gets or sets current value of setting on device
        /// </summary>
        [JsonProperty(PropertyName = "currentValue")]
        public string CurrentValue { get; set; }

    }
}
