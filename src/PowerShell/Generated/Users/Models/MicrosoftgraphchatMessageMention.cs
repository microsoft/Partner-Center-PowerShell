// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// chatMessageMention
    /// </summary>
    public partial class MicrosoftgraphchatMessageMention
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphchatMessageMention
        /// class.
        /// </summary>
        public MicrosoftgraphchatMessageMention()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphchatMessageMention
        /// class.
        /// </summary>
        public MicrosoftgraphchatMessageMention(int? id = default(int?), string mentionText = default(string), MicrosoftgraphidentitySet mentioned = default(MicrosoftgraphidentitySet))
        {
            Id = id;
            MentionText = mentionText;
            Mentioned = mentioned;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mentionText")]
        public string MentionText { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mentioned")]
        public MicrosoftgraphidentitySet Mentioned { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "Id", 2147483647);
            }
            if (Id < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Id", -2147483648);
            }
        }
    }
}
