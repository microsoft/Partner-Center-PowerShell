// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// hardwareInformation
    /// </summary>
    public partial class MicrosoftgraphhardwareInformation
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphhardwareInformation
        /// class.
        /// </summary>
        public MicrosoftgraphhardwareInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphhardwareInformation
        /// class.
        /// </summary>
        /// <param name="serialNumber">Serial number.</param>
        /// <param name="totalStorageSpace">Total storage space of the
        /// device.</param>
        /// <param name="freeStorageSpace">Free storage space of the
        /// device.</param>
        /// <param name="imei">IMEI</param>
        /// <param name="meid">MEID</param>
        /// <param name="manufacturer">Manufacturer of the device</param>
        /// <param name="model">Model of the device</param>
        /// <param name="phoneNumber">Phone number of the device</param>
        /// <param name="subscriberCarrier">Subscriber carrier of the
        /// device</param>
        /// <param name="cellularTechnology">Cellular technology of the
        /// device</param>
        /// <param name="wifiMac">WiFi MAC address of the device</param>
        /// <param name="operatingSystemLanguage">Operating system language of
        /// the device</param>
        /// <param name="isSupervised">Supervised mode of the device</param>
        /// <param name="isEncrypted">Encryption status of the device</param>
        /// <param name="isSharedDevice">Shared iPad</param>
        /// <param name="sharedDeviceCachedUsers">All users on the shared Apple
        /// device</param>
        /// <param name="tpmSpecificationVersion">String that specifies the
        /// specification version.</param>
        /// <param name="operatingSystemEdition">String that specifies the OS
        /// edition.</param>
        /// <param name="deviceFullQualifiedDomainName">Returns the fully
        /// qualified domain name of the device (if any). If the device is not
        /// domain-joined, it returns an empty string. </param>
        /// <param
        /// name="deviceGuardVirtualizationBasedSecurityHardwareRequirementState">Possible
        /// values include: 'meetHardwareRequirements', 'secureBootRequired',
        /// 'dmaProtectionRequired', 'hyperVNotSupportedForGuestVM',
        /// 'hyperVNotAvailable'</param>
        /// <param name="deviceGuardVirtualizationBasedSecurityState">Possible
        /// values include: 'running', 'rebootRequired',
        /// 'require64BitArchitecture', 'notLicensed', 'notConfigured',
        /// 'doesNotMeetHardwareRequirements', 'other'</param>
        /// <param
        /// name="deviceGuardLocalSystemAuthorityCredentialGuardState">Possible
        /// values include: 'running', 'rebootRequired', 'notLicensed',
        /// 'notConfigured', 'virtualizationBasedSecurityNotRunning'</param>
        /// <param name="osBuildNumber">Operating System Build Number on
        /// Android device</param>
        public MicrosoftgraphhardwareInformation(string serialNumber = default(string), long? totalStorageSpace = default(long?), long? freeStorageSpace = default(long?), string imei = default(string), string meid = default(string), string manufacturer = default(string), string model = default(string), string phoneNumber = default(string), string subscriberCarrier = default(string), string cellularTechnology = default(string), string wifiMac = default(string), string operatingSystemLanguage = default(string), bool? isSupervised = default(bool?), bool? isEncrypted = default(bool?), bool? isSharedDevice = default(bool?), IList<MicrosoftgraphsharedAppleDeviceUser> sharedDeviceCachedUsers = default(IList<MicrosoftgraphsharedAppleDeviceUser>), string tpmSpecificationVersion = default(string), string operatingSystemEdition = default(string), string deviceFullQualifiedDomainName = default(string), string deviceGuardVirtualizationBasedSecurityHardwareRequirementState = default(string), string deviceGuardVirtualizationBasedSecurityState = default(string), string deviceGuardLocalSystemAuthorityCredentialGuardState = default(string), string osBuildNumber = default(string))
        {
            SerialNumber = serialNumber;
            TotalStorageSpace = totalStorageSpace;
            FreeStorageSpace = freeStorageSpace;
            Imei = imei;
            Meid = meid;
            Manufacturer = manufacturer;
            Model = model;
            PhoneNumber = phoneNumber;
            SubscriberCarrier = subscriberCarrier;
            CellularTechnology = cellularTechnology;
            WifiMac = wifiMac;
            OperatingSystemLanguage = operatingSystemLanguage;
            IsSupervised = isSupervised;
            IsEncrypted = isEncrypted;
            IsSharedDevice = isSharedDevice;
            SharedDeviceCachedUsers = sharedDeviceCachedUsers;
            TpmSpecificationVersion = tpmSpecificationVersion;
            OperatingSystemEdition = operatingSystemEdition;
            DeviceFullQualifiedDomainName = deviceFullQualifiedDomainName;
            DeviceGuardVirtualizationBasedSecurityHardwareRequirementState = deviceGuardVirtualizationBasedSecurityHardwareRequirementState;
            DeviceGuardVirtualizationBasedSecurityState = deviceGuardVirtualizationBasedSecurityState;
            DeviceGuardLocalSystemAuthorityCredentialGuardState = deviceGuardLocalSystemAuthorityCredentialGuardState;
            OsBuildNumber = osBuildNumber;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets serial number.
        /// </summary>
        [JsonProperty(PropertyName = "serialNumber")]
        public string SerialNumber { get; set; }

        /// <summary>
        /// Gets or sets total storage space of the device.
        /// </summary>
        [JsonProperty(PropertyName = "totalStorageSpace")]
        public long? TotalStorageSpace { get; set; }

        /// <summary>
        /// Gets or sets free storage space of the device.
        /// </summary>
        [JsonProperty(PropertyName = "freeStorageSpace")]
        public long? FreeStorageSpace { get; set; }

        /// <summary>
        /// Gets or sets IMEI
        /// </summary>
        [JsonProperty(PropertyName = "imei")]
        public string Imei { get; set; }

        /// <summary>
        /// Gets or sets MEID
        /// </summary>
        [JsonProperty(PropertyName = "meid")]
        public string Meid { get; set; }

        /// <summary>
        /// Gets or sets manufacturer of the device
        /// </summary>
        [JsonProperty(PropertyName = "manufacturer")]
        public string Manufacturer { get; set; }

        /// <summary>
        /// Gets or sets model of the device
        /// </summary>
        [JsonProperty(PropertyName = "model")]
        public string Model { get; set; }

        /// <summary>
        /// Gets or sets phone number of the device
        /// </summary>
        [JsonProperty(PropertyName = "phoneNumber")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or sets subscriber carrier of the device
        /// </summary>
        [JsonProperty(PropertyName = "subscriberCarrier")]
        public string SubscriberCarrier { get; set; }

        /// <summary>
        /// Gets or sets cellular technology of the device
        /// </summary>
        [JsonProperty(PropertyName = "cellularTechnology")]
        public string CellularTechnology { get; set; }

        /// <summary>
        /// Gets or sets wiFi MAC address of the device
        /// </summary>
        [JsonProperty(PropertyName = "wifiMac")]
        public string WifiMac { get; set; }

        /// <summary>
        /// Gets or sets operating system language of the device
        /// </summary>
        [JsonProperty(PropertyName = "operatingSystemLanguage")]
        public string OperatingSystemLanguage { get; set; }

        /// <summary>
        /// Gets or sets supervised mode of the device
        /// </summary>
        [JsonProperty(PropertyName = "isSupervised")]
        public bool? IsSupervised { get; set; }

        /// <summary>
        /// Gets or sets encryption status of the device
        /// </summary>
        [JsonProperty(PropertyName = "isEncrypted")]
        public bool? IsEncrypted { get; set; }

        /// <summary>
        /// Gets or sets shared iPad
        /// </summary>
        [JsonProperty(PropertyName = "isSharedDevice")]
        public bool? IsSharedDevice { get; set; }

        /// <summary>
        /// Gets or sets all users on the shared Apple device
        /// </summary>
        [JsonProperty(PropertyName = "sharedDeviceCachedUsers")]
        public IList<MicrosoftgraphsharedAppleDeviceUser> SharedDeviceCachedUsers { get; set; }

        /// <summary>
        /// Gets or sets string that specifies the specification version.
        /// </summary>
        [JsonProperty(PropertyName = "tpmSpecificationVersion")]
        public string TpmSpecificationVersion { get; set; }

        /// <summary>
        /// Gets or sets string that specifies the OS edition.
        /// </summary>
        [JsonProperty(PropertyName = "operatingSystemEdition")]
        public string OperatingSystemEdition { get; set; }

        /// <summary>
        /// Gets or sets returns the fully qualified domain name of the device
        /// (if any). If the device is not domain-joined, it returns an empty
        /// string.
        /// </summary>
        [JsonProperty(PropertyName = "deviceFullQualifiedDomainName")]
        public string DeviceFullQualifiedDomainName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'meetHardwareRequirements',
        /// 'secureBootRequired', 'dmaProtectionRequired',
        /// 'hyperVNotSupportedForGuestVM', 'hyperVNotAvailable'
        /// </summary>
        [JsonProperty(PropertyName = "deviceGuardVirtualizationBasedSecurityHardwareRequirementState")]
        public string DeviceGuardVirtualizationBasedSecurityHardwareRequirementState { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'running', 'rebootRequired',
        /// 'require64BitArchitecture', 'notLicensed', 'notConfigured',
        /// 'doesNotMeetHardwareRequirements', 'other'
        /// </summary>
        [JsonProperty(PropertyName = "deviceGuardVirtualizationBasedSecurityState")]
        public string DeviceGuardVirtualizationBasedSecurityState { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'running', 'rebootRequired',
        /// 'notLicensed', 'notConfigured',
        /// 'virtualizationBasedSecurityNotRunning'
        /// </summary>
        [JsonProperty(PropertyName = "deviceGuardLocalSystemAuthorityCredentialGuardState")]
        public string DeviceGuardLocalSystemAuthorityCredentialGuardState { get; set; }

        /// <summary>
        /// Gets or sets operating System Build Number on Android device
        /// </summary>
        [JsonProperty(PropertyName = "osBuildNumber")]
        public string OsBuildNumber { get; set; }

    }
}
