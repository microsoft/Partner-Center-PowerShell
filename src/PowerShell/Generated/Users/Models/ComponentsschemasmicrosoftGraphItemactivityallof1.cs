// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// itemActivity
    /// </summary>
    public partial class ComponentsschemasmicrosoftGraphItemactivityallof1
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphItemactivityallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphItemactivityallof1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphItemactivityallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphItemactivityallof1(object access = default(object), System.DateTime? activityDateTime = default(System.DateTime?), MicrosoftgraphidentitySet actor = default(MicrosoftgraphidentitySet), MicrosoftgraphdriveItem driveItem = default(MicrosoftgraphdriveItem))
        {
            Access = access;
            ActivityDateTime = activityDateTime;
            Actor = actor;
            DriveItem = driveItem;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "access")]
        public object Access { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "activityDateTime")]
        public System.DateTime? ActivityDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actor")]
        public MicrosoftgraphidentitySet Actor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "driveItem")]
        public MicrosoftgraphdriveItem DriveItem { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DriveItem != null)
            {
                DriveItem.Validate();
            }
        }
    }
}
