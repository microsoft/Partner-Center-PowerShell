// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Microsoftgraphschedule
    {
        /// <summary>
        /// Initializes a new instance of the Microsoftgraphschedule class.
        /// </summary>
        public Microsoftgraphschedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Microsoftgraphschedule class.
        /// </summary>
        /// <param name="provisionStatus">Possible values include:
        /// 'NotStarted', 'Running', 'Completed', 'Failed'</param>
        public Microsoftgraphschedule(string id = default(string), bool? enabled = default(bool?), string timeZone = default(string), string provisionStatus = default(string), string provisionStatusCode = default(string), IList<string> workforceIntegrationIds = default(IList<string>), IList<Microsoftgraphshift> shifts = default(IList<Microsoftgraphshift>), IList<MicrosoftgraphopenShift> openShifts = default(IList<MicrosoftgraphopenShift>), IList<MicrosoftgraphtimeOff> timesOff = default(IList<MicrosoftgraphtimeOff>), IList<MicrosoftgraphtimeOffReason> timeOffReasons = default(IList<MicrosoftgraphtimeOffReason>), IList<MicrosoftgraphschedulingGroup> schedulingGroups = default(IList<MicrosoftgraphschedulingGroup>), IList<MicrosoftgraphswapShiftsChangeRequest> swapShiftsChangeRequests = default(IList<MicrosoftgraphswapShiftsChangeRequest>), IList<MicrosoftgraphopenShiftChangeRequest> openShiftChangeRequests = default(IList<MicrosoftgraphopenShiftChangeRequest>), IList<MicrosoftgraphtimeOffRequest> timeOffRequests = default(IList<MicrosoftgraphtimeOffRequest>))
        {
            Id = id;
            Enabled = enabled;
            TimeZone = timeZone;
            ProvisionStatus = provisionStatus;
            ProvisionStatusCode = provisionStatusCode;
            WorkforceIntegrationIds = workforceIntegrationIds;
            Shifts = shifts;
            OpenShifts = openShifts;
            TimesOff = timesOff;
            TimeOffReasons = timeOffReasons;
            SchedulingGroups = schedulingGroups;
            SwapShiftsChangeRequests = swapShiftsChangeRequests;
            OpenShiftChangeRequests = openShiftChangeRequests;
            TimeOffRequests = timeOffRequests;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeZone")]
        public string TimeZone { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotStarted', 'Running',
        /// 'Completed', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "provisionStatus")]
        public string ProvisionStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provisionStatusCode")]
        public string ProvisionStatusCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "workforceIntegrationIds")]
        public IList<string> WorkforceIntegrationIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shifts")]
        public IList<Microsoftgraphshift> Shifts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "openShifts")]
        public IList<MicrosoftgraphopenShift> OpenShifts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timesOff")]
        public IList<MicrosoftgraphtimeOff> TimesOff { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeOffReasons")]
        public IList<MicrosoftgraphtimeOffReason> TimeOffReasons { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schedulingGroups")]
        public IList<MicrosoftgraphschedulingGroup> SchedulingGroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "swapShiftsChangeRequests")]
        public IList<MicrosoftgraphswapShiftsChangeRequest> SwapShiftsChangeRequests { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "openShiftChangeRequests")]
        public IList<MicrosoftgraphopenShiftChangeRequest> OpenShiftChangeRequests { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeOffRequests")]
        public IList<MicrosoftgraphtimeOffRequest> TimeOffRequests { get; set; }

    }
}
