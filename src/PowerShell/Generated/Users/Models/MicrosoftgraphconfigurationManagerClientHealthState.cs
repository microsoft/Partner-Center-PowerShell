// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// configurationManagerClientHealthState
    /// </summary>
    public partial class MicrosoftgraphconfigurationManagerClientHealthState
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphconfigurationManagerClientHealthState class.
        /// </summary>
        public MicrosoftgraphconfigurationManagerClientHealthState()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphconfigurationManagerClientHealthState class.
        /// </summary>
        /// <param name="state">Possible values include: 'unknown',
        /// 'installed', 'healthy', 'installFailed', 'updateFailed',
        /// 'communicationError'</param>
        /// <param name="errorCode">Error code for failed state.</param>
        /// <param name="lastSyncDateTime">Datetime fo last sync with
        /// configuration manager management point.</param>
        public MicrosoftgraphconfigurationManagerClientHealthState(string state = default(string), int? errorCode = default(int?), System.DateTime? lastSyncDateTime = default(System.DateTime?))
        {
            State = state;
            ErrorCode = errorCode;
            LastSyncDateTime = lastSyncDateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'unknown', 'installed',
        /// 'healthy', 'installFailed', 'updateFailed', 'communicationError'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets error code for failed state.
        /// </summary>
        [JsonProperty(PropertyName = "errorCode")]
        public int? ErrorCode { get; set; }

        /// <summary>
        /// Gets or sets datetime fo last sync with configuration manager
        /// management point.
        /// </summary>
        [JsonProperty(PropertyName = "lastSyncDateTime")]
        public System.DateTime? LastSyncDateTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ErrorCode > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "ErrorCode", 2147483647);
            }
            if (ErrorCode < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "ErrorCode", -2147483648);
            }
        }
    }
}
