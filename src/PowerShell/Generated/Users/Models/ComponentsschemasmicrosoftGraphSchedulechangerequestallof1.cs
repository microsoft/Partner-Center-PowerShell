// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// scheduleChangeRequest
    /// </summary>
    public partial class ComponentsschemasmicrosoftGraphSchedulechangerequestallof1
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphSchedulechangerequestallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphSchedulechangerequestallof1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphSchedulechangerequestallof1 class.
        /// </summary>
        /// <param name="assignedTo">Possible values include: 'sender',
        /// 'recipient', 'manager', 'system', 'unknownFutureValue'</param>
        /// <param name="state">Possible values include: 'pending', 'approved',
        /// 'declined', 'unknownFutureValue'</param>
        public ComponentsschemasmicrosoftGraphSchedulechangerequestallof1(string assignedTo = default(string), string state = default(string), string senderMessage = default(string), System.DateTime? senderDateTime = default(System.DateTime?), string managerActionMessage = default(string), System.DateTime? managerActionDateTime = default(System.DateTime?), string senderUserId = default(string), string managerUserId = default(string))
        {
            AssignedTo = assignedTo;
            State = state;
            SenderMessage = senderMessage;
            SenderDateTime = senderDateTime;
            ManagerActionMessage = managerActionMessage;
            ManagerActionDateTime = managerActionDateTime;
            SenderUserId = senderUserId;
            ManagerUserId = managerUserId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'sender', 'recipient',
        /// 'manager', 'system', 'unknownFutureValue'
        /// </summary>
        [JsonProperty(PropertyName = "assignedTo")]
        public string AssignedTo { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'pending', 'approved',
        /// 'declined', 'unknownFutureValue'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "senderMessage")]
        public string SenderMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "senderDateTime")]
        public System.DateTime? SenderDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "managerActionMessage")]
        public string ManagerActionMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "managerActionDateTime")]
        public System.DateTime? ManagerActionDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "senderUserId")]
        public string SenderUserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "managerUserId")]
        public string ManagerUserId { get; set; }

    }
}
