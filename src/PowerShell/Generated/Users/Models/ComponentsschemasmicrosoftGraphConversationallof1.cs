// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// conversation
    /// </summary>
    public partial class ComponentsschemasmicrosoftGraphConversationallof1
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphConversationallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphConversationallof1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ComponentsschemasmicrosoftGraphConversationallof1 class.
        /// </summary>
        public ComponentsschemasmicrosoftGraphConversationallof1(string topic = default(string), bool? hasAttachments = default(bool?), System.DateTime? lastDeliveredDateTime = default(System.DateTime?), IList<string> uniqueSenders = default(IList<string>), string preview = default(string), IList<MicrosoftgraphconversationThread> threads = default(IList<MicrosoftgraphconversationThread>))
        {
            Topic = topic;
            HasAttachments = hasAttachments;
            LastDeliveredDateTime = lastDeliveredDateTime;
            UniqueSenders = uniqueSenders;
            Preview = preview;
            Threads = threads;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "topic")]
        public string Topic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasAttachments")]
        public bool? HasAttachments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastDeliveredDateTime")]
        public System.DateTime? LastDeliveredDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uniqueSenders")]
        public IList<string> UniqueSenders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preview")]
        public string Preview { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "threads")]
        public IList<MicrosoftgraphconversationThread> Threads { get; set; }

    }
}
