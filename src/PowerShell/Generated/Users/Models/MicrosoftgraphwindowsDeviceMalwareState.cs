// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MicrosoftgraphwindowsDeviceMalwareState
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphwindowsDeviceMalwareState class.
        /// </summary>
        public MicrosoftgraphwindowsDeviceMalwareState()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphwindowsDeviceMalwareState class.
        /// </summary>
        /// <param name="displayName">Malware name</param>
        /// <param name="additionalInformationUrl">Information URL to learn
        /// more about the malware</param>
        /// <param name="severity">Possible values include: 'unknown', 'low',
        /// 'moderate', 'high', 'severe'</param>
        /// <param name="catetgory">Possible values include: 'invalid',
        /// 'adware', 'spyware', 'passwordStealer', 'trojanDownloader', 'worm',
        /// 'backdoor', 'remoteAccessTrojan', 'trojan', 'emailFlooder',
        /// 'keylogger', 'dialer', 'monitoringSoftware', 'browserModifier',
        /// 'cookie', 'browserPlugin', 'aolExploit', 'nuker',
        /// 'securityDisabler', 'jokeProgram', 'hostileActiveXControl',
        /// 'softwareBundler', 'stealthNotifier', 'settingsModifier',
        /// 'toolBar', 'remoteControlSoftware', 'trojanFtp',
        /// 'potentialUnwantedSoftware', 'icqExploit', 'trojanTelnet',
        /// 'exploit', 'filesharingProgram', 'malwareCreationTool',
        /// 'remote_Control_Software', 'tool', 'trojanDenialOfService',
        /// 'trojanDropper', 'trojanMassMailer', 'trojanMonitoringSoftware',
        /// 'trojanProxyServer', 'virus', 'known', 'unknown', 'spp',
        /// 'behavior', 'vulnerability', 'policy',
        /// 'enterpriseUnwantedSoftware', 'ransom', 'hipsRule'</param>
        /// <param name="executionState">Possible values include: 'unknown',
        /// 'blocked', 'allowed', 'running', 'notRunning'</param>
        /// <param name="state">Possible values include: 'unknown', 'detected',
        /// 'cleaned', 'quarantined', 'removed', 'allowed', 'blocked',
        /// 'cleanFailed', 'quarantineFailed', 'removeFailed', 'allowFailed',
        /// 'abandoned', 'blockFailed'</param>
        /// <param name="threatState">Possible values include: 'active',
        /// 'actionFailed', 'manualStepsRequired', 'fullScanRequired',
        /// 'rebootRequired', 'remediatedWithNonCriticalFailures',
        /// 'quarantined', 'removed', 'cleaned', 'allowed',
        /// 'noStatusCleared'</param>
        /// <param name="initialDetectionDateTime">Initial detection datetime
        /// of the malware</param>
        /// <param name="lastStateChangeDateTime">The last time this particular
        /// threat was changed</param>
        /// <param name="detectionCount">Number of times the malware is
        /// detected</param>
        /// <param name="category">Possible values include: 'invalid',
        /// 'adware', 'spyware', 'passwordStealer', 'trojanDownloader', 'worm',
        /// 'backdoor', 'remoteAccessTrojan', 'trojan', 'emailFlooder',
        /// 'keylogger', 'dialer', 'monitoringSoftware', 'browserModifier',
        /// 'cookie', 'browserPlugin', 'aolExploit', 'nuker',
        /// 'securityDisabler', 'jokeProgram', 'hostileActiveXControl',
        /// 'softwareBundler', 'stealthNotifier', 'settingsModifier',
        /// 'toolBar', 'remoteControlSoftware', 'trojanFtp',
        /// 'potentialUnwantedSoftware', 'icqExploit', 'trojanTelnet',
        /// 'exploit', 'filesharingProgram', 'malwareCreationTool',
        /// 'remote_Control_Software', 'tool', 'trojanDenialOfService',
        /// 'trojanDropper', 'trojanMassMailer', 'trojanMonitoringSoftware',
        /// 'trojanProxyServer', 'virus', 'known', 'unknown', 'spp',
        /// 'behavior', 'vulnerability', 'policy',
        /// 'enterpriseUnwantedSoftware', 'ransom', 'hipsRule'</param>
        public MicrosoftgraphwindowsDeviceMalwareState(string id = default(string), string displayName = default(string), string additionalInformationUrl = default(string), string severity = default(string), string catetgory = default(string), string executionState = default(string), string state = default(string), string threatState = default(string), System.DateTime? initialDetectionDateTime = default(System.DateTime?), System.DateTime? lastStateChangeDateTime = default(System.DateTime?), int? detectionCount = default(int?), string category = default(string))
        {
            Id = id;
            DisplayName = displayName;
            AdditionalInformationUrl = additionalInformationUrl;
            Severity = severity;
            Catetgory = catetgory;
            ExecutionState = executionState;
            State = state;
            ThreatState = threatState;
            InitialDetectionDateTime = initialDetectionDateTime;
            LastStateChangeDateTime = lastStateChangeDateTime;
            DetectionCount = detectionCount;
            Category = category;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets malware name
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets information URL to learn more about the malware
        /// </summary>
        [JsonProperty(PropertyName = "additionalInformationUrl")]
        public string AdditionalInformationUrl { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'unknown', 'low', 'moderate',
        /// 'high', 'severe'
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public string Severity { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'invalid', 'adware',
        /// 'spyware', 'passwordStealer', 'trojanDownloader', 'worm',
        /// 'backdoor', 'remoteAccessTrojan', 'trojan', 'emailFlooder',
        /// 'keylogger', 'dialer', 'monitoringSoftware', 'browserModifier',
        /// 'cookie', 'browserPlugin', 'aolExploit', 'nuker',
        /// 'securityDisabler', 'jokeProgram', 'hostileActiveXControl',
        /// 'softwareBundler', 'stealthNotifier', 'settingsModifier',
        /// 'toolBar', 'remoteControlSoftware', 'trojanFtp',
        /// 'potentialUnwantedSoftware', 'icqExploit', 'trojanTelnet',
        /// 'exploit', 'filesharingProgram', 'malwareCreationTool',
        /// 'remote_Control_Software', 'tool', 'trojanDenialOfService',
        /// 'trojanDropper', 'trojanMassMailer', 'trojanMonitoringSoftware',
        /// 'trojanProxyServer', 'virus', 'known', 'unknown', 'spp',
        /// 'behavior', 'vulnerability', 'policy',
        /// 'enterpriseUnwantedSoftware', 'ransom', 'hipsRule'
        /// </summary>
        [JsonProperty(PropertyName = "catetgory")]
        public string Catetgory { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'unknown', 'blocked',
        /// 'allowed', 'running', 'notRunning'
        /// </summary>
        [JsonProperty(PropertyName = "executionState")]
        public string ExecutionState { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'unknown', 'detected',
        /// 'cleaned', 'quarantined', 'removed', 'allowed', 'blocked',
        /// 'cleanFailed', 'quarantineFailed', 'removeFailed', 'allowFailed',
        /// 'abandoned', 'blockFailed'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'active', 'actionFailed',
        /// 'manualStepsRequired', 'fullScanRequired', 'rebootRequired',
        /// 'remediatedWithNonCriticalFailures', 'quarantined', 'removed',
        /// 'cleaned', 'allowed', 'noStatusCleared'
        /// </summary>
        [JsonProperty(PropertyName = "threatState")]
        public string ThreatState { get; set; }

        /// <summary>
        /// Gets or sets initial detection datetime of the malware
        /// </summary>
        [JsonProperty(PropertyName = "initialDetectionDateTime")]
        public System.DateTime? InitialDetectionDateTime { get; set; }

        /// <summary>
        /// Gets or sets the last time this particular threat was changed
        /// </summary>
        [JsonProperty(PropertyName = "lastStateChangeDateTime")]
        public System.DateTime? LastStateChangeDateTime { get; set; }

        /// <summary>
        /// Gets or sets number of times the malware is detected
        /// </summary>
        [JsonProperty(PropertyName = "detectionCount")]
        public int? DetectionCount { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'invalid', 'adware',
        /// 'spyware', 'passwordStealer', 'trojanDownloader', 'worm',
        /// 'backdoor', 'remoteAccessTrojan', 'trojan', 'emailFlooder',
        /// 'keylogger', 'dialer', 'monitoringSoftware', 'browserModifier',
        /// 'cookie', 'browserPlugin', 'aolExploit', 'nuker',
        /// 'securityDisabler', 'jokeProgram', 'hostileActiveXControl',
        /// 'softwareBundler', 'stealthNotifier', 'settingsModifier',
        /// 'toolBar', 'remoteControlSoftware', 'trojanFtp',
        /// 'potentialUnwantedSoftware', 'icqExploit', 'trojanTelnet',
        /// 'exploit', 'filesharingProgram', 'malwareCreationTool',
        /// 'remote_Control_Software', 'tool', 'trojanDenialOfService',
        /// 'trojanDropper', 'trojanMassMailer', 'trojanMonitoringSoftware',
        /// 'trojanProxyServer', 'virus', 'known', 'unknown', 'spp',
        /// 'behavior', 'vulnerability', 'policy',
        /// 'enterpriseUnwantedSoftware', 'ransom', 'hipsRule'
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DetectionCount > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "DetectionCount", 2147483647);
            }
            if (DetectionCount < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "DetectionCount", -2147483648);
            }
        }
    }
}
