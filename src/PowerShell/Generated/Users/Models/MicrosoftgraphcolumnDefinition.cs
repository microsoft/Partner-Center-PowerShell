// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MicrosoftgraphcolumnDefinition
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphcolumnDefinition
        /// class.
        /// </summary>
        public MicrosoftgraphcolumnDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftgraphcolumnDefinition
        /// class.
        /// </summary>
        public MicrosoftgraphcolumnDefinition(string id = default(string), object boolean = default(object), MicrosoftgraphcalculatedColumn calculated = default(MicrosoftgraphcalculatedColumn), MicrosoftgraphchoiceColumn choice = default(MicrosoftgraphchoiceColumn), string columnGroup = default(string), MicrosoftgraphcurrencyColumn currency = default(MicrosoftgraphcurrencyColumn), MicrosoftgraphdateTimeColumn dateTime = default(MicrosoftgraphdateTimeColumn), MicrosoftgraphdefaultColumnValue defaultValue = default(MicrosoftgraphdefaultColumnValue), string description = default(string), string displayName = default(string), bool? enforceUniqueValues = default(bool?), object geolocation = default(object), bool? hidden = default(bool?), bool? indexed = default(bool?), MicrosoftgraphlookupColumn lookup = default(MicrosoftgraphlookupColumn), string name = default(string), MicrosoftgraphnumberColumn number = default(MicrosoftgraphnumberColumn), MicrosoftgraphpersonOrGroupColumn personOrGroup = default(MicrosoftgraphpersonOrGroupColumn), bool? readOnlyProperty = default(bool?), bool? required = default(bool?), MicrosoftgraphtextColumn text = default(MicrosoftgraphtextColumn))
        {
            Id = id;
            Boolean = boolean;
            Calculated = calculated;
            Choice = choice;
            ColumnGroup = columnGroup;
            Currency = currency;
            DateTime = dateTime;
            DefaultValue = defaultValue;
            Description = description;
            DisplayName = displayName;
            EnforceUniqueValues = enforceUniqueValues;
            Geolocation = geolocation;
            Hidden = hidden;
            Indexed = indexed;
            Lookup = lookup;
            Name = name;
            Number = number;
            PersonOrGroup = personOrGroup;
            ReadOnlyProperty = readOnlyProperty;
            Required = required;
            Text = text;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "boolean")]
        public object Boolean { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "calculated")]
        public MicrosoftgraphcalculatedColumn Calculated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "choice")]
        public MicrosoftgraphchoiceColumn Choice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "columnGroup")]
        public string ColumnGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public MicrosoftgraphcurrencyColumn Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateTime")]
        public MicrosoftgraphdateTimeColumn DateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultValue")]
        public MicrosoftgraphdefaultColumnValue DefaultValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enforceUniqueValues")]
        public bool? EnforceUniqueValues { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "geolocation")]
        public object Geolocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hidden")]
        public bool? Hidden { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "indexed")]
        public bool? Indexed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lookup")]
        public MicrosoftgraphlookupColumn Lookup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "number")]
        public MicrosoftgraphnumberColumn Number { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "personOrGroup")]
        public MicrosoftgraphpersonOrGroupColumn PersonOrGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "required")]
        public bool? Required { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public MicrosoftgraphtextColumn Text { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Text != null)
            {
                Text.Validate();
            }
        }
    }
}
