// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Store.PartnerCenter.PowerShell.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftgraphprovisioningObjectSummary
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphprovisioningObjectSummary class.
        /// </summary>
        public MicrosoftgraphprovisioningObjectSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftgraphprovisioningObjectSummary class.
        /// </summary>
        public MicrosoftgraphprovisioningObjectSummary(string id = default(string), System.DateTime? activityDateTime = default(System.DateTime?), string tenantId = default(string), string jobId = default(string), string cycleId = default(string), string changeId = default(string), string action = default(string), int? durationInMilliseconds = default(int?), Microsoftgraphinitiator initiatedBy = default(Microsoftgraphinitiator), MicrosoftgraphprovisioningSystemDetails sourceSystem = default(MicrosoftgraphprovisioningSystemDetails), MicrosoftgraphprovisioningSystemDetails targetSystem = default(MicrosoftgraphprovisioningSystemDetails), MicrosoftgraphprovisionedIdentity sourceIdentity = default(MicrosoftgraphprovisionedIdentity), MicrosoftgraphprovisionedIdentity targetIdentity = default(MicrosoftgraphprovisionedIdentity), MicrosoftgraphstatusBase statusInfo = default(MicrosoftgraphstatusBase), IList<MicrosoftgraphprovisioningStep> provisioningSteps = default(IList<MicrosoftgraphprovisioningStep>), IList<MicrosoftgraphmodifiedProperty> modifiedProperties = default(IList<MicrosoftgraphmodifiedProperty>))
        {
            Id = id;
            ActivityDateTime = activityDateTime;
            TenantId = tenantId;
            JobId = jobId;
            CycleId = cycleId;
            ChangeId = changeId;
            Action = action;
            DurationInMilliseconds = durationInMilliseconds;
            InitiatedBy = initiatedBy;
            SourceSystem = sourceSystem;
            TargetSystem = targetSystem;
            SourceIdentity = sourceIdentity;
            TargetIdentity = targetIdentity;
            StatusInfo = statusInfo;
            ProvisioningSteps = provisioningSteps;
            ModifiedProperties = modifiedProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "activityDateTime")]
        public System.DateTime? ActivityDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobId")]
        public string JobId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cycleId")]
        public string CycleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "changeId")]
        public string ChangeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "action")]
        public string Action { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "durationInMilliseconds")]
        public int? DurationInMilliseconds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "initiatedBy")]
        public Microsoftgraphinitiator InitiatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceSystem")]
        public MicrosoftgraphprovisioningSystemDetails SourceSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetSystem")]
        public MicrosoftgraphprovisioningSystemDetails TargetSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceIdentity")]
        public MicrosoftgraphprovisionedIdentity SourceIdentity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetIdentity")]
        public MicrosoftgraphprovisionedIdentity TargetIdentity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statusInfo")]
        public MicrosoftgraphstatusBase StatusInfo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provisioningSteps")]
        public IList<MicrosoftgraphprovisioningStep> ProvisioningSteps { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedProperties")]
        public IList<MicrosoftgraphmodifiedProperty> ModifiedProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DurationInMilliseconds > 2147483647)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "DurationInMilliseconds", 2147483647);
            }
            if (DurationInMilliseconds < -2147483648)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "DurationInMilliseconds", -2147483648);
            }
        }
    }
}
